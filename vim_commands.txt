#
# VIM COMMANDS!
#

ESC             Command
V               Visual
shift+V         Visual (select entire line)
I               Insert

-- Command
:q!             quit w/o saving
:wq             save and quit
:w              save
:vsp            vertical split
ctl+w + hjkl    switch between split panes
:edit FILENAME  open new file (path via terminal cwd)
:buffers        list open buffers
:bw #           close buffer # (without quitting)
:tabe FILENAME  open file in new tab
:tabn           navigate between tabs
:tabp
:retab          convert all tabs to spaces
                (need 'set tabstop=4 shiftwidth=4 expandtab' in .vimrc)

cntl+D          scroll half page down
cntl+U          scroll half page up
GA              enter Insert at end of file
zz              scroll the line with the cursor to the center of the screen
zt              scroll the line with the cursor to the top
zb              scroll the line with the cursor to the bottom
u               undo
cntl+r          redo
e               move to end of word
w               move to beginning of word
b               move to beginning of previous word
0               jump to beginning of line
j               jump forward 1 line
k               jump backward 1 line
M               jump to middle of screen
H               jump to top of screen
L               jump to bottom of screen
%               jump to matching bracket { } [ ] ( )
dw              delete word
dd              delete line

:%s/foo/bar/g   find each occurrence of 'foo' (in all lines), and replace it
                with 'bar'

:s/foo/bar/g    find each occurrence of 'foo' (in the current line only), and
                replace it with 'bar'

:%s/foo/bar/gc  change each 'foo' to 'bar', but ask for confirmation first

:%s/\<foo\>/bar/gc
                change only whole words exactly matching 'foo' to 'bar'; ask
                for confirmation

:%s/foo/bar/gci change each 'foo' (case insensitive due to the i flag) to
                'bar'; ask for confirmation

:%s/foo\c/bar/gc
                is the same because \c makes the search case insensitive
                this may be wanted after using :set noignorecase to make
                searches case sensitive (the default)

:%s/foo/bar/gcI change each 'foo' (case sensitive due to the I flag) to 'bar';
                ask for confirmation

:%s/foo\C/bar/gc
                is the same because \C makes the search case sensitive
                this may be wanted after using :set ignorecase to make searches
                case insensitive

-- Visual
p               paste selection below
P               paste selection above
y               copy selection
x               cut line
d               delete character
