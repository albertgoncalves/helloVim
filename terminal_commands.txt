#
# TERMINAL COMMANDS!
#

$ cd /          navigate to lowest directory level

$ cmd+`         switch between windows of current application

-- enable Use Option as Meta Key in Terminal/Profiles/Preferences/Keyboard --
$ optn+delete   delete word
$ optn+ARROW    move forward/backward by word

$ open -a "APPNAME" FILENAME
                open file with specific application

$ mv ~/Desktop/tmp1/* ~/Desktop/tmp2/
                move all files from one folder into another

$ ls *.sh       list all files in current directory w/ matching wildcard

$ curl -u 'USER' https://api.github.com/user/repos -d '{"name":"REPO"}'
                create new github repo 'REPO', via user 'USER'

$ git add .     stage all
$ git commit    commit
$ git status    check status of recent commit
$ git push      push to git
$ git reset     unstage
$ git reset HEAD~
                also this...
$ git rm -r --cached FILENAME
                remove file from git (if added to .gitignore after init)

# HOW TO RECOVER FROM DOING BAD THINGS
# https://stackoverflow.com/questions/3640764/can-i-recover-a-branch-after-its-deletion-in-git/22303923#22303923

# $ git reflog
# $ git fsck --full --no-reflogs --unreachable --lost-found | grep commit | cut -d\  -f3 | xargs -n 1 git log -n 1 --pretty=oneline > .git/lost-found.txt
# $ git branch commit_rescued BRANCH_ID

# https://stackoverflow.com/questions/3469741/remove-file-from-the-repository-but-keep-it-locally
# $ git rm --cached SOMEFILE
                remove file from repo but preserve local copy
